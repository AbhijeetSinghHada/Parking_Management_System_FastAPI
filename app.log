2023-10-15 17:24:42 DEBUG log_debug(23) Error Occurred: Traceback (most recent call last):
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\helpers\handle_errors.py", line 20, in wrapper
    return_value = function(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\helpers\access_decorator.py", line 21, in wrapper
    return fun(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\helpers\validations.py", line 40, in wrapper
    return function(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\routers\slot.py", line 29, in park_vehicle_on_slot
    slot.assign_slot(request_data.get("slot_number"), request_data.get(
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\controllers\slot.py", line 18, in assign_slot
    self.__is_slot_available(slot_number, vehicle_type)
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\controllers\slot.py", line 119, in __is_slot_available
    raise LookupError(prompts.get("SLOT_OCCUPIED"))
LookupError: Slot Already Occupied! Choose One Which is not.

2023-10-15 17:27:37 DEBUG log_debug(23) Error Occurred: Traceback (most recent call last):
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\helpers\handle_errors.py", line 20, in wrapper
    return_value = function(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\helpers\access_decorator.py", line 21, in wrapper
    return fun(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\helpers\validations.py", line 40, in wrapper
    return function(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\routers\slot.py", line 29, in park_vehicle_on_slot
    slot.assign_slot(request_data.get("slot_number"), request_data.get(
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\controllers\slot.py", line 18, in assign_slot
    self.__is_slot_available(slot_number, vehicle_type)
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\controllers\slot.py", line 119, in __is_slot_available
    raise ConflictError(prompts.get("SLOT_OCCUPIED"))
src.helpers.errors.ConflictError: Slot Already Occupied! Choose One Which is not.

2023-10-15 17:27:54 DEBUG log_debug(23) Error Occurred: Traceback (most recent call last):
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\helpers\handle_errors.py", line 20, in wrapper
    return_value = function(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\helpers\access_decorator.py", line 21, in wrapper
    return fun(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\routers\slot.py", line 53, in unpark_vehicle_from_slot
    slot_details = slot.unassign_slot(vehicle_number)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\controllers\slot.py", line 30, in unassign_slot
    slot_details = self.__get_slot_details_by_vehicle(vehicle_number)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\controllers\slot.py", line 139, in __get_slot_details_by_vehicle
    raise ValueError(prompts.get("VEHICLE_NOT_PARKED"))
ValueError: Vehicle do not have any assigned slot.

