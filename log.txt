10-Oct-23 18:17:04 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [].

10-Oct-23 18:17:08 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT c.id,c.customer_name,c.email,c.phone_number, v.vehicle_number, s.slot_type FROM parkingmanagement.customer as c inner join parkingmanagement.vehicle as v on c.id = v.customer_id inner join parkingmanagement.slot_category as s on v.slot_category_id = s.id where v.vehicle_number=%s or c.id=%s or c.email=%s;', ('LMV', '', '') returned : [].

10-Oct-23 18:17:08 src.controllers.vehicle:24 DEBUG:__get_vehicle_data  called with params : vehicle_number='LMV' returned : [].

10-Oct-23 18:17:08 src.controllers.vehicle:24 DEBUG:check_if_vehicle_exists  called with params : 'LMV' returned : False.

10-Oct-23 18:17:08 src.models.database:24 DEBUG:update_item  called with params : 'INSERT INTO parkingmanagement.billing SET vehicle_id = ( SELECT id FROM parkingmanagement.vehicle WHERE vehicle_number=%s), bill_date = %s, time_parked_in = %s', ('RJ20CD7259', datetime.date(2023, 10, 10), '18:17') returned : 40.

10-Oct-23 18:17:08 src.controllers.billing:24 DEBUG:insert_into_bill_table  called with params : 'RJ20CD7259', datetime.date(2023, 10, 10), '18:17' returned : None.

10-Oct-23 18:17:08 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT slot_type, total_capacity, charge FROM parkingmanagement.slot_category;' returned : [('LMV', 8, 10), ('HMV', 10, 50), ('Bike', 10, 15), ('Cycle', 10, 2)].

10-Oct-23 18:17:08 src.controllers.parking_space:24 DEBUG:is_vehicle_type_existing  called with params : 'LMV' returned : None.

10-Oct-23 18:17:08 src.controllers.parking_space:24 DEBUG:get_parking_category_details  called with params : 'LMV' returned : ('LMV', 8, 10).

10-Oct-23 18:17:08 src.controllers.parking_space:24 DEBUG:is_slot_number_existing  called with params : 7, 'LMV' returned : None.

10-Oct-23 18:17:08 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [].

10-Oct-23 18:17:08 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [].

10-Oct-23 18:17:08 src.models.database:24 DEBUG:update_item  called with params : "INSERT INTO parkingmanagement.slot SET billing_id = last_insert_id(), slot_number = %s, vehicle_id = ( SELECT id FROM parkingmanagement.vehicle WHERE vehicle_number=%s), slot_category_id = (SELECT id FROM parkingmanagement.slot_category WHERE slot_type = %s), status_id ='2'", (7, 'RJ20CD7259', 'LMV') returned : 38.

10-Oct-23 18:17:08 src.controllers.slot:24 DEBUG:assign_slot  called with params : 7, 'LMV', 'RJ20CD7259' returned : None.

10-Oct-23 18:17:11 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [(7, 1, 'LMV', 2, 40, 'RJ20CD7259', 10, 38)].

10-Oct-23 18:17:11 src.models.database:24 DEBUG:update_item  called with params : 'DELETE from parkingmanagement.slot where id=%s', (38,) returned : 0.

10-Oct-23 18:17:11 src.controllers.slot:24 DEBUG:unassign_slot  called with params : 'RJ20CD7259' returned : {'slot_number': 7, 'vehicle_number': 'RJ20CD7259', 'vehicle_type': 'LMV', 'slot_charges': 10, 'bill_id': 40}.

10-Oct-23 18:17:11 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT bill_date, time_parked_in FROM parkingmanagement.billing where id = %s', (40,) returned : [(datetime.date(2023, 10, 10), datetime.timedelta(seconds=65820))].

10-Oct-23 18:17:11 src.models.database:24 DEBUG:update_item  called with params : 'UPDATE parkingmanagement.billing SET date_time_parked_out=%s, total_charges=%s where id = %s', ('2023-10-10 18:17', 10, 40) returned : 0.

10-Oct-23 18:17:11 src.controllers.billing:24 DEBUG:update_bill_table  called with params : 40, 10 returned : None.

10-Oct-23 18:17:11 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT bill.id, c.id,c.customer_name,c.email,c.phone_number, v.vehicle_number, s.slot_type, bill.bill_date, bill.time_parked_in, bill.date_time_parked_out, bill.total_charges FROM parkingmanagement.customer as c inner join parkingmanagement.vehicle as v on c.id = v.customer_id inner join parkingmanagement.slot_category as s on v.slot_category_id = s.id inner join parkingmanagement.billing as bill on v.id = bill.vehicle_id where bill.id = %s', (40,) returned : [(40, 1, 'Ram', 'ram@gmail.com', '1234567899', 'RJ20CD7259', 'LMV', datetime.date(2023, 10, 10), datetime.timedelta(seconds=65820), datetime.datetime(2023, 10, 10, 18, 17), 10)].

10-Oct-23 18:17:11 src.controllers.billing:24 DEBUG:generate_bill  called with params : 40 returned : {'customer': {'cutomer_id': 1, 'name': 'Ram', 'email_address': 'ram@gmail.com', 'phone_number': '1234567899'}, 'time_in': datetime.datetime(2023, 10, 10, 18, 17), 'time_out': datetime.datetime(2023, 10, 10, 18, 17), 'total_charges': 10}.

11-Oct-23 11:30:54 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT id, username, password, user_id FROM parkingmanagement.credentials WHERE username = %s and password = %s', ('abhi', '91301e05e44406c12a4626a2382df30b04543c0561e10f5471f24c0928645109') returned : [(1, 'abhi', '91301e05e44406c12a4626a2382df30b04543c0561e10f5471f24c0928645109', 1)].

11-Oct-23 11:30:54 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT e.emp_name,e.id,r.role_category FROM parkingmanagement.employee as e inner join parkingmanagement.role_mapping as m on e.id = m.user_id inner join parkingmanagement.roles as r on m.role_id = r.id where e.id= %s ', (1,) returned : [('Abhijeet Singh', 1, 'Admin'), ('Abhijeet Singh', 1, 'Operator')].

11-Oct-23 11:30:54 src.helpers.helpers:8 DEBUG:convert_user_details_to_dict called with params [('Abhijeet Singh', 1, 'Admin'), ('Abhijeet Singh', 1, 'Operator')]
11-Oct-23 11:30:59 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT c.id,c.customer_name,c.email,c.phone_number, v.vehicle_number, s.slot_type FROM parkingmanagement.customer as c inner join parkingmanagement.vehicle as v on c.id = v.customer_id inner join parkingmanagement.slot_category as s on v.slot_category_id = s.id where v.vehicle_number=%s or c.id=%s or c.email=%s;', ('LMV', '', '') returned : [].

11-Oct-23 11:30:59 src.controllers.vehicle:24 DEBUG:__get_vehicle_data  called with params : vehicle_number='LMV' returned : [].

11-Oct-23 11:30:59 src.controllers.vehicle:24 DEBUG:check_if_vehicle_exists  called with params : 'LMV' returned : False.

11-Oct-23 11:30:59 src.models.database:24 DEBUG:update_item  called with params : 'INSERT INTO parkingmanagement.billing SET vehicle_id = ( SELECT id FROM parkingmanagement.vehicle WHERE vehicle_number=%s), bill_date = %s, time_parked_in = %s', ('RJ20CD7259', datetime.date(2023, 10, 11), '11:30') returned : 41.

11-Oct-23 11:30:59 src.controllers.billing:24 DEBUG:insert_into_bill_table  called with params : 'RJ20CD7259', datetime.date(2023, 10, 11), '11:30' returned : None.

11-Oct-23 11:30:59 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT slot_type, total_capacity, charge FROM parkingmanagement.slot_category;' returned : [('LMV', 8, 10), ('HMV', 10, 50), ('Bike', 10, 15), ('Cycle', 10, 2)].

11-Oct-23 11:30:59 src.controllers.parking_space:24 DEBUG:is_vehicle_type_existing  called with params : 'LMV' returned : None.

11-Oct-23 11:30:59 src.controllers.parking_space:24 DEBUG:get_parking_category_details  called with params : 'LMV' returned : ('LMV', 8, 10).

11-Oct-23 11:30:59 src.controllers.parking_space:24 DEBUG:is_slot_number_existing  called with params : 7, 'LMV' returned : None.

11-Oct-23 11:30:59 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [].

11-Oct-23 11:30:59 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [].

11-Oct-23 11:30:59 src.models.database:24 DEBUG:update_item  called with params : "INSERT INTO parkingmanagement.slot SET billing_id = last_insert_id(), slot_number = %s, vehicle_id = ( SELECT id FROM parkingmanagement.vehicle WHERE vehicle_number=%s), slot_category_id = (SELECT id FROM parkingmanagement.slot_category WHERE slot_type = %s), status_id ='2'", (7, 'RJ20CD7259', 'LMV') returned : 39.

11-Oct-23 11:30:59 src.controllers.slot:24 DEBUG:assign_slot  called with params : 7, 'LMV', 'RJ20CD7259' returned : None.

11-Oct-23 11:31:01 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT c.id,c.customer_name,c.email,c.phone_number, v.vehicle_number, s.slot_type FROM parkingmanagement.customer as c inner join parkingmanagement.vehicle as v on c.id = v.customer_id inner join parkingmanagement.slot_category as s on v.slot_category_id = s.id where v.vehicle_number=%s or c.id=%s or c.email=%s;', ('LMV', '', '') returned : [].

11-Oct-23 11:31:01 src.controllers.vehicle:24 DEBUG:__get_vehicle_data  called with params : vehicle_number='LMV' returned : [].

11-Oct-23 11:31:01 src.controllers.vehicle:24 DEBUG:check_if_vehicle_exists  called with params : 'LMV' returned : False.

11-Oct-23 11:31:01 src.models.database:24 DEBUG:update_item  called with params : 'INSERT INTO parkingmanagement.billing SET vehicle_id = ( SELECT id FROM parkingmanagement.vehicle WHERE vehicle_number=%s), bill_date = %s, time_parked_in = %s', ('RJ20CD7259', datetime.date(2023, 10, 11), '11:31') returned : 42.

11-Oct-23 11:31:01 src.controllers.billing:24 DEBUG:insert_into_bill_table  called with params : 'RJ20CD7259', datetime.date(2023, 10, 11), '11:31' returned : None.

11-Oct-23 11:31:01 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT slot_type, total_capacity, charge FROM parkingmanagement.slot_category;' returned : [('LMV', 8, 10), ('HMV', 10, 50), ('Bike', 10, 15), ('Cycle', 10, 2)].

11-Oct-23 11:31:01 src.controllers.parking_space:24 DEBUG:is_vehicle_type_existing  called with params : 'LMV' returned : None.

11-Oct-23 11:31:01 src.controllers.parking_space:24 DEBUG:get_parking_category_details  called with params : 'LMV' returned : ('LMV', 8, 10).

11-Oct-23 11:31:01 src.controllers.parking_space:24 DEBUG:is_slot_number_existing  called with params : 7, 'LMV' returned : None.

11-Oct-23 11:31:01 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [(7, 1, 'LMV', 2, 41, 'RJ20CD7259', 10, 39)].

11-Oct-23 11:31:09 src.models.database:24 DEBUG:update_item  called with params : 'DELETE from parkingmanagement.slot where id=%s', (39,) returned : 0.

11-Oct-23 11:31:09 src.controllers.slot:24 DEBUG:unassign_slot  called with params : 'RJ20CD7259' returned : {'slot_number': 7, 'vehicle_number': 'RJ20CD7259', 'vehicle_type': 'LMV', 'slot_charges': 10, 'bill_id': 41}.

11-Oct-23 11:31:09 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT bill_date, time_parked_in FROM parkingmanagement.billing where id = %s', (41,) returned : [(datetime.date(2023, 10, 11), datetime.timedelta(seconds=41400))].

11-Oct-23 11:31:09 src.models.database:24 DEBUG:update_item  called with params : 'UPDATE parkingmanagement.billing SET date_time_parked_out=%s, total_charges=%s where id = %s', ('2023-10-11 11:31', 10, 41) returned : 0.

11-Oct-23 11:31:09 src.controllers.billing:24 DEBUG:update_bill_table  called with params : 41, 10 returned : None.

11-Oct-23 11:31:09 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT bill.id, c.id,c.customer_name,c.email,c.phone_number, v.vehicle_number, s.slot_type, bill.bill_date, bill.time_parked_in, bill.date_time_parked_out, bill.total_charges FROM parkingmanagement.customer as c inner join parkingmanagement.vehicle as v on c.id = v.customer_id inner join parkingmanagement.slot_category as s on v.slot_category_id = s.id inner join parkingmanagement.billing as bill on v.id = bill.vehicle_id where bill.id = %s', (41,) returned : [(41, 1, 'Ram', 'ram@gmail.com', '1234567899', 'RJ20CD7259', 'LMV', datetime.date(2023, 10, 11), datetime.timedelta(seconds=41400), datetime.datetime(2023, 10, 11, 11, 31), 10)].

11-Oct-23 11:31:09 src.controllers.billing:24 DEBUG:generate_bill  called with params : 41 returned : {'customer': {'cutomer_id': 1, 'name': 'Ram', 'email_address': 'ram@gmail.com', 'phone_number': '1234567899'}, 'time_in': datetime.datetime(2023, 10, 11, 11, 30), 'time_out': datetime.datetime(2023, 10, 11, 11, 31), 'total_charges': 10}.

11-Oct-23 11:31:12 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [].

11-Oct-23 11:31:21 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [].

11-Oct-23 11:31:21 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT slot_type, total_capacity, charge FROM parkingmanagement.slot_category;' returned : [('LMV', 8, 10), ('HMV', 10, 50), ('Bike', 10, 15), ('Cycle', 10, 2)].

11-Oct-23 11:31:21 src.controllers.parking_space:24 DEBUG:get_parking_capacity  called with params : 'LMV' returned : 8.

11-Oct-23 11:31:21 src.controllers.slot:24 DEBUG:get_all_slot_status  called with params : 'LMV' returned : [{'slot_id': 1, 'status': 'Not Occupied'}, {'slot_id': 2, 'status': 'Not Occupied'}, {'slot_id': 3, 'status': 'Not Occupied'}, {'slot_id': 4, 'status': 'Not Occupied'}, {'slot_id': 5, 'status': 'Not Occupied'}, {'slot_id': 6, 'status': 'Not Occupied'}, {'slot_id': 7, 'status': 'Not Occupied'}, {'slot_id': 8, 'status': 'Not Occupied'}].

11-Oct-23 11:35:48 src.controllers.slot:77 DEBUG:unban_slot called
11-Oct-23 11:35:48 src.models.database:24 DEBUG:update_item  called with params : 'DELETE FROM parkingmanagement.slot where slot_number=%s and vehicle_id=-1 and slot_category_id=(select id from parkingmanagement.slot_category where slot_type=%s)', (1, 'LMV') returned : 0.

11-Oct-23 11:35:48 src.controllers.slot:24 DEBUG:unban_slot  called with params : 1, 'LMV' returned : None.

11-Oct-23 11:35:48 src.routers.slot:80 DEBUG:Unbanned slot called with params: 1, LMV
11-Oct-23 11:35:51 src.controllers.slot:69 DEBUG:view_ban_slots called
11-Oct-23 11:35:51 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [].

11-Oct-23 11:35:51 src.controllers.slot:24 DEBUG:view_ban_slots  called with params :  returned : [].

11-Oct-23 11:53:03 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT id, username, password, user_id FROM parkingmanagement.credentials WHERE username = %s and password = %s', ('kittu', 'f955929b29e6b08c795f25361829c954b1b864fddfc9a28b812b2102f9c8c26e') returned : [(2, 'kittu', 'f955929b29e6b08c795f25361829c954b1b864fddfc9a28b812b2102f9c8c26e', 2)].

11-Oct-23 11:53:03 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT e.emp_name,e.id,r.role_category FROM parkingmanagement.employee as e inner join parkingmanagement.role_mapping as m on e.id = m.user_id inner join parkingmanagement.roles as r on m.role_id = r.id where e.id= %s ', (2,) returned : [('Kittu', 2, 'Operator')].

11-Oct-23 11:53:12 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT c.id,c.customer_name,c.email,c.phone_number, v.vehicle_number, s.slot_type FROM parkingmanagement.customer as c inner join parkingmanagement.vehicle as v on c.id = v.customer_id inner join parkingmanagement.slot_category as s on v.slot_category_id = s.id where v.vehicle_number=%s or c.id=%s or c.email=%s;', ('LMV', '', '') returned : [].

11-Oct-23 11:53:12 src.controllers.vehicle:24 DEBUG:__get_vehicle_data  called with params : vehicle_number='LMV' returned : [].

11-Oct-23 11:53:12 src.controllers.vehicle:24 DEBUG:check_if_vehicle_exists  called with params : 'LMV' returned : False.

11-Oct-23 11:53:12 src.models.database:24 DEBUG:update_item  called with params : 'INSERT INTO parkingmanagement.billing SET vehicle_id = ( SELECT id FROM parkingmanagement.vehicle WHERE vehicle_number=%s), bill_date = %s, time_parked_in = %s', ('RJ20CD7259', datetime.date(2023, 10, 11), '11:53') returned : 43.

11-Oct-23 11:53:12 src.controllers.billing:24 DEBUG:insert_into_bill_table  called with params : 'RJ20CD7259', datetime.date(2023, 10, 11), '11:53' returned : None.

11-Oct-23 11:53:12 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT slot_type, total_capacity, charge FROM parkingmanagement.slot_category;' returned : [('LMV', 8, 10), ('HMV', 10, 50), ('Bike', 10, 15), ('Cycle', 10, 2)].

11-Oct-23 11:53:12 src.controllers.parking_space:24 DEBUG:is_vehicle_type_existing  called with params : 'LMV' returned : None.

11-Oct-23 11:53:12 src.controllers.parking_space:24 DEBUG:get_parking_category_details  called with params : 'LMV' returned : ('LMV', 8, 10).

11-Oct-23 11:53:12 src.controllers.parking_space:24 DEBUG:is_slot_number_existing  called with params : 7, 'LMV' returned : None.

11-Oct-23 11:53:12 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [].

11-Oct-23 11:53:12 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [].

11-Oct-23 11:53:12 src.models.database:24 DEBUG:update_item  called with params : "INSERT INTO parkingmanagement.slot SET billing_id = last_insert_id(), slot_number = %s, vehicle_id = ( SELECT id FROM parkingmanagement.vehicle WHERE vehicle_number=%s), slot_category_id = (SELECT id FROM parkingmanagement.slot_category WHERE slot_type = %s), status_id ='2'", (7, 'RJ20CD7259', 'LMV') returned : 40.

11-Oct-23 11:53:12 src.controllers.slot:24 DEBUG:assign_slot  called with params : 7, 'LMV', 'RJ20CD7259' returned : None.

11-Oct-23 11:53:17 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT s.slot_number, s.vehicle_id, c.slot_type, s.status_id, s.billing_id, v.vehicle_number, c.charge, s.id FROM parkingmanagement.slot as s inner join parkingmanagement.slot_category as c on s.slot_category_id = c.id inner join parkingmanagement.vehicle as v on s.vehicle_id = v.id;' returned : [(7, 1, 'LMV', 2, 43, 'RJ20CD7259', 10, 40)].

11-Oct-23 11:53:17 src.models.database:24 DEBUG:update_item  called with params : 'DELETE from parkingmanagement.slot where id=%s', (40,) returned : 0.

11-Oct-23 11:53:17 src.controllers.slot:24 DEBUG:unassign_slot  called with params : 'RJ20CD7259' returned : {'slot_number': 7, 'vehicle_number': 'RJ20CD7259', 'vehicle_type': 'LMV', 'slot_charges': 10, 'bill_id': 43}.

11-Oct-23 11:53:17 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT bill_date, time_parked_in FROM parkingmanagement.billing where id = %s', (43,) returned : [(datetime.date(2023, 10, 11), datetime.timedelta(seconds=42780))].

11-Oct-23 11:53:17 src.models.database:24 DEBUG:update_item  called with params : 'UPDATE parkingmanagement.billing SET date_time_parked_out=%s, total_charges=%s where id = %s', ('2023-10-11 11:53', 10, 43) returned : 0.

11-Oct-23 11:53:17 src.controllers.billing:24 DEBUG:update_bill_table  called with params : 43, 10 returned : None.

11-Oct-23 11:53:17 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT bill.id, c.id,c.customer_name,c.email,c.phone_number, v.vehicle_number, s.slot_type, bill.bill_date, bill.time_parked_in, bill.date_time_parked_out, bill.total_charges FROM parkingmanagement.customer as c inner join parkingmanagement.vehicle as v on c.id = v.customer_id inner join parkingmanagement.slot_category as s on v.slot_category_id = s.id inner join parkingmanagement.billing as bill on v.id = bill.vehicle_id where bill.id = %s', (43,) returned : [(43, 1, 'Ram', 'ram@gmail.com', '1234567899', 'RJ20CD7259', 'LMV', datetime.date(2023, 10, 11), datetime.timedelta(seconds=42780), datetime.datetime(2023, 10, 11, 11, 53), 10)].

11-Oct-23 11:53:17 src.controllers.billing:24 DEBUG:generate_bill  called with params : 43 returned : {'customer': {'cutomer_id': 1, 'name': 'Ram', 'email_address': 'ram@gmail.com', 'phone_number': '1234567899'}, 'time_in': datetime.datetime(2023, 10, 11, 11, 53), 'time_out': datetime.datetime(2023, 10, 11, 11, 53), 'total_charges': 10}.

11-Oct-23 11:53:20 src.helpers.handle_errors:29 DEBUG:Error Occurred: ban_slot Method Error: Traceback (most recent call last):
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\helpers\handle_errors.py", line 16, in wrapper
    return_value = function(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahada\OneDrive - WatchGuard Technologies Inc\V3_FAST_Parking_Management_System\src\helpers\access_decorator.py", line 24, in wrapper
    content=formated_error(
            ^^^^^^^^^^^^^^^
TypeError: formated_error() missing 1 required positional argument: 'status'

11-Oct-23 11:53:20 src.helpers.handle_errors:31 ERROR:Error Occurred: ban_slot Method Error: formated_error() missing 1 required positional argument: 'status'
11-Oct-23 12:02:03 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT id, username, password, user_id FROM parkingmanagement.credentials WHERE username = %s and password = %s', ('kittu', 'f955929b29e6b08c795f25361829c954b1b864fddfc9a28b812b2102f9c8c26e') returned : [(2, 'kittu', 'f955929b29e6b08c795f25361829c954b1b864fddfc9a28b812b2102f9c8c26e', 2)].

11-Oct-23 12:02:03 src.models.database:24 DEBUG:get_multiple_items  called with params : 'SELECT e.emp_name,e.id,r.role_category FROM parkingmanagement.employee as e inner join parkingmanagement.role_mapping as m on e.id = m.user_id inner join parkingmanagement.roles as r on m.role_id = r.id where e.id= %s ', (2,) returned : [('Kittu', 2, 'Operator')].

